# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: session.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import modules_pb2
import data_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='session.proto',
  package='miniature',
  serialized_pb=_b('\n\rsession.proto\x12\tminiature\x1a\rmodules.proto\x1a\ndata.proto\"y\n\x12SessionInitRequest\x12\x1f\n\x05\x63hain\x18\x01 \x02(\x0b\x32\x10.miniature.Chain\x1a\x42\n\x12SessionRequirement\x12\x12\n\nthroughput\x18\x02 \x01(\r\x12\x18\n\x10\x66rame_per_second\x18\x03 \x01(\r\")\n\x13SessionInitResponse\x12\x12\n\nsession_id\x18\x01 \x02(\r\"\xe3\x01\n\rInferenceData\x12\x12\n\nsession_id\x18\x01 \x01(\r\x12)\n\ttext_data\x18\x02 \x01(\x0b\x32\x14.miniature.TextProtoH\x00\x12+\n\naudio_data\x18\x03 \x01(\x0b\x32\x15.miniature.AudioProtoH\x00\x12+\n\nimage_data\x18\x04 \x01(\x0b\x32\x15.miniature.ImageProtoH\x00\x12+\n\nvideo_data\x18\x05 \x01(\x0b\x32\x15.miniature.VideoProtoH\x00\x42\x0c\n\nquery_data')
  ,
  dependencies=[modules_pb2.DESCRIPTOR,data_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SESSIONINITREQUEST_SESSIONREQUIREMENT = _descriptor.Descriptor(
  name='SessionRequirement',
  full_name='miniature.SessionInitRequest.SessionRequirement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='throughput', full_name='miniature.SessionInitRequest.SessionRequirement.throughput', index=0,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='frame_per_second', full_name='miniature.SessionInitRequest.SessionRequirement.frame_per_second', index=1,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=176,
)

_SESSIONINITREQUEST = _descriptor.Descriptor(
  name='SessionInitRequest',
  full_name='miniature.SessionInitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chain', full_name='miniature.SessionInitRequest.chain', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SESSIONINITREQUEST_SESSIONREQUIREMENT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=176,
)


_SESSIONINITRESPONSE = _descriptor.Descriptor(
  name='SessionInitResponse',
  full_name='miniature.SessionInitResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session_id', full_name='miniature.SessionInitResponse.session_id', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=219,
)


_INFERENCEDATA = _descriptor.Descriptor(
  name='InferenceData',
  full_name='miniature.InferenceData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session_id', full_name='miniature.InferenceData.session_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='text_data', full_name='miniature.InferenceData.text_data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='audio_data', full_name='miniature.InferenceData.audio_data', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_data', full_name='miniature.InferenceData.image_data', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='video_data', full_name='miniature.InferenceData.video_data', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='query_data', full_name='miniature.InferenceData.query_data',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=222,
  serialized_end=449,
)

_SESSIONINITREQUEST_SESSIONREQUIREMENT.containing_type = _SESSIONINITREQUEST
_SESSIONINITREQUEST.fields_by_name['chain'].message_type = modules_pb2._CHAIN
_INFERENCEDATA.fields_by_name['text_data'].message_type = data_pb2._TEXTPROTO
_INFERENCEDATA.fields_by_name['audio_data'].message_type = data_pb2._AUDIOPROTO
_INFERENCEDATA.fields_by_name['image_data'].message_type = data_pb2._IMAGEPROTO
_INFERENCEDATA.fields_by_name['video_data'].message_type = data_pb2._VIDEOPROTO
_INFERENCEDATA.oneofs_by_name['query_data'].fields.append(
  _INFERENCEDATA.fields_by_name['text_data'])
_INFERENCEDATA.fields_by_name['text_data'].containing_oneof = _INFERENCEDATA.oneofs_by_name['query_data']
_INFERENCEDATA.oneofs_by_name['query_data'].fields.append(
  _INFERENCEDATA.fields_by_name['audio_data'])
_INFERENCEDATA.fields_by_name['audio_data'].containing_oneof = _INFERENCEDATA.oneofs_by_name['query_data']
_INFERENCEDATA.oneofs_by_name['query_data'].fields.append(
  _INFERENCEDATA.fields_by_name['image_data'])
_INFERENCEDATA.fields_by_name['image_data'].containing_oneof = _INFERENCEDATA.oneofs_by_name['query_data']
_INFERENCEDATA.oneofs_by_name['query_data'].fields.append(
  _INFERENCEDATA.fields_by_name['video_data'])
_INFERENCEDATA.fields_by_name['video_data'].containing_oneof = _INFERENCEDATA.oneofs_by_name['query_data']
DESCRIPTOR.message_types_by_name['SessionInitRequest'] = _SESSIONINITREQUEST
DESCRIPTOR.message_types_by_name['SessionInitResponse'] = _SESSIONINITRESPONSE
DESCRIPTOR.message_types_by_name['InferenceData'] = _INFERENCEDATA

SessionInitRequest = _reflection.GeneratedProtocolMessageType('SessionInitRequest', (_message.Message,), dict(

  SessionRequirement = _reflection.GeneratedProtocolMessageType('SessionRequirement', (_message.Message,), dict(
    DESCRIPTOR = _SESSIONINITREQUEST_SESSIONREQUIREMENT,
    __module__ = 'session_pb2'
    # @@protoc_insertion_point(class_scope:miniature.SessionInitRequest.SessionRequirement)
    ))
  ,
  DESCRIPTOR = _SESSIONINITREQUEST,
  __module__ = 'session_pb2'
  # @@protoc_insertion_point(class_scope:miniature.SessionInitRequest)
  ))
_sym_db.RegisterMessage(SessionInitRequest)
_sym_db.RegisterMessage(SessionInitRequest.SessionRequirement)

SessionInitResponse = _reflection.GeneratedProtocolMessageType('SessionInitResponse', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONINITRESPONSE,
  __module__ = 'session_pb2'
  # @@protoc_insertion_point(class_scope:miniature.SessionInitResponse)
  ))
_sym_db.RegisterMessage(SessionInitResponse)

InferenceData = _reflection.GeneratedProtocolMessageType('InferenceData', (_message.Message,), dict(
  DESCRIPTOR = _INFERENCEDATA,
  __module__ = 'session_pb2'
  # @@protoc_insertion_point(class_scope:miniature.InferenceData)
  ))
_sym_db.RegisterMessage(InferenceData)


# @@protoc_insertion_point(module_scope)
